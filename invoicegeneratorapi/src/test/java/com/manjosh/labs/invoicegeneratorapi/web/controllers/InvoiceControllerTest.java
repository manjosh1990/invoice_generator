package com.manjosh.labs.invoicegeneratorapi.web.controllers;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.manjosh.labs.invoicegeneratorapi.AbstractBaseIntegrationTest;
import com.manjosh.labs.invoicegeneratorapi.domain.InvoiceRepository;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Account;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Billing;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Company;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Invoice;
import com.manjosh.labs.invoicegeneratorapi.domain.models.InvoiceDetails;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Item;
import com.manjosh.labs.invoicegeneratorapi.domain.models.Shipping;
import java.time.Instant;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

@AutoConfigureMockMvc
class InvoiceControllerIntegrationTest extends AbstractBaseIntegrationTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper objectMapper;

  @Autowired private InvoiceRepository invoiceRepository;

  @BeforeEach
  void setUp() {
    invoiceRepository.deleteAll();
  }

  @Test
  void shouldCreateInvoiceSuccessfully() throws Exception {
    // given
    Company company = new Company();
    company.setCompanyName("Test Company");
    company.setCompanyAddress("123 Test St");
    company.setCompanyPhone("123-456-7890");

    Billing billing = new Billing();
    billing.setName("John Doe");
    billing.setAddress("456 Billing St");

    Shipping shipping = new Shipping();
    shipping.setName("Jane Doe");
    shipping.setAddress("789 Shipping St");

    InvoiceDetails invoiceDetails = new InvoiceDetails();
    invoiceDetails.setInvoiceNumber("INV-001");
    invoiceDetails.setDate("2025-06-29");

    Item item = new Item();
    item.setDescription("Test Item");
    item.setQuantity(1);
    item.setPrice(100.0);

    Account account = new Account();
    account.setAccountName("Test Account");
    account.setAccountNumber("123456789");
    account.setIfscCode("TEST1234");

    Invoice invoice =
        new Invoice(
            null, // ID will be generated by MongoDB
            company,
            billing,
            shipping,
            account,
            invoiceDetails,
            List.of(item),
            "Test Notes",
            "logo.png",
            10.0,
            "thumbnail.png",
            "default",
            "Test Invoice",
            Instant.now(),
            null);

    // when & then
    mockMvc
        .perform(
            post("/api/invoices")
                .contentType(MediaType.APPLICATION_JSON)
                .content(objectMapper.writeValueAsString(invoice)))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.company.name").value("Test Company"))
        .andExpect(jsonPath("$.billing.name").value("John Doe"))
        .andExpect(jsonPath("$.shipping.name").value("Jane Doe"))
        .andExpect(jsonPath("$.invoice.invoiceNumber").value("INV-001"))
        .andExpect(jsonPath("$.items[0].description").value("Test Item"))
        .andExpect(jsonPath("$.tax").value(10.0));
  }
}
